<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset=UTF-8"utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>
            Laravel Administrator Documentation                            : Overview                    </title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width">
        <link rel="stylesheet" href="../css/style.css">
        <script src="../js/vendor/modernizr-2.6.2.min.js"></script>
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="#">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->

        <div class="wrapper">
            <header>
                
                <h1>Laravel Administrator Documentation</h1>
                <div id="donateContainer">
                    <form action="#">
                        <button id="donateButton" class="stripe-button-el">
                            <span style="display: block; min-height: 30px;">Donate</span>
                        </button>
                    </form>
                </div>
            </header>
            <aside class="sidebar">
                	<ul>
<li>Overview

<ul>
<li><a href="introduction.htm">Introduction</a></li>
<li><a href="contributing.htm">Contributing</a></li>
<li><a href="style-guide.htm">Style Guide</a></li>
<li><a href="license.htm">License</a></li>
</ul></li>
<li>Getting Started

<ul>
<li><a href="installation.htm">Installation</a></li>
<li><a href="configuration.htm">Configuration</a></li>
<li><a href="model-configuration.htm">Model Configuration</a></li>
<li><a href="settings-configuration.htm">Settings Configuration</a></li>
<li><a href="validation.htm">Validation</a></li>
<li><a href="localization.htm">Localization</a></li>
<li><a href="tutorials.htm">Tutorials</a></li>
</ul></li>
<li>Custom Actions

<ul>
<li><a href="actions.htm">Overview</a></li>
</ul></li>
<li>Columns

<ul>
<li><a href="columns.htm">Overview</a></li>
<li><a href="relationship-columns.htm">Relationships</a></li>
</ul></li>
<li>Fields

<ul>
<li><a href="fields.htm">Overview</a></li>
</ul></li>
<li>Field Types

<ul>
<li><a href="field-type-key.htm">Key</a></li>
<li><a href="field-type-text.htm">Text</a></li>
<li><a href="field-type-password.htm">Password</a></li>
<li><a href="field-type-textarea.htm">TextArea</a></li>
<li><a href="field-type-wysiwyg.htm">WYSIWYG</a></li>
<li><a href="field-type-markdown.htm">Markdown</a></li>
<li><a href="field-type-relationship.htm">Relationship</a></li>
<li><a href="field-type-number.htm">Number</a></li>
<li><a href="field-type-bool.htm">Bool</a></li>
<li><a href="field-type-enum.htm">Enum</a></li>
<li><a href="field-type-date.htm">Date</a></li>
<li><a href="field-type-time.htm">Time</a></li>
<li><a href="field-type-datetime.htm">Datetime</a></li>
<li><a href="field-type-file.htm">File</a></li>
<li><a href="field-type-image.htm">Image</a></li>
<li><a href="field-type-color.htm">Color</a></li>
</ul></li>
</ul>
            </aside>
            <section class="content">
                	<h1>Custom Actions</h1>

<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#model-config">Model Config</a></li>
<li><a href="#settings-config">Settings Config</a></li>
<li><a href="#confirmations">Confirmations</a></li>
<li><a href="#dynamic-messages">Dynamic Messages</a></li>
</ul>

<p><a name="introduction"></a></p>

<h2>Introduction</h2>

<p>You can define custom actions in your <a href="model-configuration.htm#custom-actions">settings config files</a> if you want to provide the administrative user buttons to perform custom code. You can modify an Eloquent model, or on a settings page you can give a user a button to clear the site cache or backup the database. A custom action is part of the <code>actions</code> array in your config files and it looks like this:</p>

<pre><code>namespace pf_base {

namespace global {

extern char net_modulename[FILENAME_MAX];
extern char script_modulename[FILENAME_MAX];
extern char performance_modulename[FILENAME_MAX];
extern char db_modulename[FILENAME_MAX];
extern char engine_modulename[FILENAME_MAX];
extern char applicationname[FILENAME_MAX]; //应用全局名称
extern uint8_t applicationtype; //应用的类型 0 服务器 1 客户端

PF_API const char *get_net_modulename();
PF_API const char *get_script_modulename();
PF_API const char *get_performanace_modulename();
PF_API const char *get_db_modulename();
PF_API const char *get_engine_modulename();
PF_API const char *get_applicationname();
PF_API void set_applicationname(const char *name);
PF_API uint8_t get_applicationtype();
PF_API void set_applicationtype(uint8_t type);

}; //namespace global

}; //namespace ps_base

#define NET_MODULENAME pf_base::global::get_net_modulename()
#define SCRIPT_MODULENAME pf_base::global::get_script_modulename()
#define PERFORMANCE_MODULENAME pf_base::global::get_performanace_modulename()
#define DB_MODULENAME pf_base::global::get_db_modulename()
#define ENGINE_MODULENAME pf_base::global::get_engine_modulename()
#define APPLICATION_NAME pf_base::global::get_applicationname()
#define APPLICATION_TYPE pf_base::global::get_applicationtype()
</code></pre>

<p>The <code>title</code> option lets you define the button's label value.</p>

<p>The <code>messages</code> option is an array with three keys: <code>active</code>, <code>success</code>, and <code>error</code>. The <code>active</code> key is what is shown to the user as the action is being performed. The <code>success</code> key is the success message. The <code>error</code> key is the default error message.</p>

<p>The <code>permission</code> option is an anonymous function that gets the relevant <code>$model</code> passed to it as its only parameter. This is exactly the same as if you were to put this action in your <a href="model-configuration.htm#action-permissions"><code>action_permissions</code></a> array. Where you choose to put the permission callback is entirely up to you.</p>

<blockquote>
  <p><strong>Note</strong>: If you want to show a custom error message, return an error string back from the <code>action</code> function. If you want to initiate a file download, return a Response::download().</p>
</blockquote>

<p><a name="model-config"></a></p>

<h2>Model Config</h2>

<p>In a <a href="model-configuration.htm#custom-actions">model configuration file</a>, the Eloquent model instance for that item will be passed into the <code>action</code> function.</p>

<pre><code>'action' =&gt; function(&amp;$model)
{
    //
}
</code></pre>

<p>You can also create a general action on your model page in the <code>global_actions</code> array.</p>

<pre><code>'global_actions' =&gt; array(
    'some_action' =&gt; array(
        //action options
    )
)
</code></pre>

<p>These global custom actions are passed the filtered query builder object so that you can do something with the current result set if you choose to do so. You can also use this to publish all unpublished items, send emails to unnotified users, or really anything you can think of.</p>

<p><a name="settings-config"></a></p>

<h2>Settings Config</h2>

<p>In a <a href="settings-configuration.htm#custom-actions">settings configuration file</a>, the currently-saved data for the page is passed by reference into the <code>action</code> function.</p>

<pre><code>'action' =&gt; function(&amp;$data)
{
    //
}
</code></pre>

<p><a name="confirmations"></a></p>

<h2>Confirmations</h2>

<p>If you want a confirmation dialog to appear before the action is performed, you can pass in a <code>confirmation</code> option for the action:</p>

<pre><code>'clear_cache' =&gt; array(
    'title' =&gt; 'Clear Cache',
    'confirmation' =&gt; 'Are you sure you want to clear the cache?',
    'action' =&gt; function(&amp;$data)
    {
        //clear the cache
    }
),
</code></pre>

<p>If the admin user confirms, the action will proceed. If they do not, the action will not.</p>

<p><a name="dynamic-messages"></a></p>

<h2>Dynamic Messages</h2>

<p>It's possible to pass in anonymous functions to any of the custom action text fields (<code>title</code>, <code>confirmation</code>, and any of the <code>messages</code> keys). These anonymous functions will be passed the relevant Eloquent model or settings config object. For example:</p>

<pre><code>'ban_user' =&gt; array(
    'title' =&gt; function($model)
    {
        return "Are you sure you want to " . ($model-&gt;banned ? 'unban ' : 'ban ') . $model-&gt;name . '?';
    },
    'messages' =&gt; array(
        'active' =&gt; function($model)
        {
            return ($model-&gt;banned ? 'Unbanning ' : 'Banning ') . $model-&gt;name . '...';
        },
        'success' =&gt; function($model)
        {
            return $model-&gt;name . ($model-&gt;banned ? ' unbanned!' : ' banned!');
        },
        'error' =&gt; function($model)
        {
            return "There was an error while " . ($model-&gt;banned ? 'unbanning ' : 'banning ') . $model-&gt;name;
        },
    ),
    'action' =&gt; function(&amp;$data)
    {
        //ban the user
    }
),
</code></pre>
                <nav>
                                    <a href="tutorials.htm">Tutorials</a> |
                                                    <a href="columns.htm">Overview </a>
                                </nav>
                <footer>
                    <p><a href="#">Dayle Rees</a>.</p>
                </footer>
            </section>
            <div class="clearfix"></div>
        </div>

        <script src="../../ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../js/vendor/jquery-1.8.2.min.js"><\/script>')</script>
        <script src="../../checkout.stripe.com/v2/checkout.js"></script>
        <script src="../js/vendor/prettify.js"></script>
        <script src="../js/plugins.js"></script>
        <script src="../js/main.js"></script>

        <script type="text/javascript">

          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-37898177-1']);
          _gaq.push(['_trackPageview']);

          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www/') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();

        </script>
    </body>
</html>